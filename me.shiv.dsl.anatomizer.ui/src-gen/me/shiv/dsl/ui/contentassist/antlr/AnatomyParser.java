/*
* generated by Xtext
*/
package me.shiv.dsl.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import me.shiv.dsl.services.AnatomyGrammarAccess;

public class AnatomyParser extends AbstractContentAssistParser {
	
	@Inject
	private AnatomyGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected me.shiv.dsl.ui.contentassist.antlr.internal.InternalAnatomyParser createParser() {
		me.shiv.dsl.ui.contentassist.antlr.internal.InternalAnatomyParser result = new me.shiv.dsl.ui.contentassist.antlr.internal.InternalAnatomyParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getModelAccess().getGroup(), "rule__Model__Group__0");
					put(grammarAccess.getShipmentAccess().getGroup(), "rule__Shipment__Group__0");
					put(grammarAccess.getWorkPackageAccess().getGroup(), "rule__WorkPackage__Group__0");
					put(grammarAccess.getWorkPackageAccess().getGroup_4(), "rule__WorkPackage__Group_4__0");
					put(grammarAccess.getModelAccess().getShipmentsAssignment_1(), "rule__Model__ShipmentsAssignment_1");
					put(grammarAccess.getShipmentAccess().getNameAssignment_1(), "rule__Shipment__NameAssignment_1");
					put(grammarAccess.getShipmentAccess().getWorkPackagesAssignment_3(), "rule__Shipment__WorkPackagesAssignment_3");
					put(grammarAccess.getWorkPackageAccess().getNameAssignment_1(), "rule__WorkPackage__NameAssignment_1");
					put(grammarAccess.getWorkPackageAccess().getDescAssignment_3(), "rule__WorkPackage__DescAssignment_3");
					put(grammarAccess.getWorkPackageAccess().getDepAssignment_4_1(), "rule__WorkPackage__DepAssignment_4_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			me.shiv.dsl.ui.contentassist.antlr.internal.InternalAnatomyParser typedParser = (me.shiv.dsl.ui.contentassist.antlr.internal.InternalAnatomyParser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public AnatomyGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(AnatomyGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
